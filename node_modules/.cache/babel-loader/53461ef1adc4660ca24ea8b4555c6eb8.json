{"ast":null,"code":"var _jsxFileName = \"/Users/asl/PROJECTS/ideahacks/ideahacks-frontend/src/views/resultsPage/ResultsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport db from '../../util/firebase';\nimport { ref, onValue } from 'firebase/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResultsPage = () => {\n  _s();\n\n  const [data, setData] = useState('');\n  useEffect(() => {\n    // read the database data from the specified database reference (\"test\")\n    console.log(\"HELLO\");\n    onValue(ref(db, 'test'), snapshot => {\n      const dbData = snapshot.val();\n      console.log(\"DBDATA: \", dbData);\n\n      if (dbData !== null) {\n        setData({ ...dbData\n        });\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"confirm-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Currently...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Brightness: \", data.brightness]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Brightness: \", data.humidity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Brightness: \", data.temperature]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResultsPage, \"VZqd8eS65aqgHhr94QvD8B0VC/4=\");\n\n_c = ResultsPage;\nexport default ResultsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultsPage\");","map":{"version":3,"sources":["/Users/asl/PROJECTS/ideahacks/ideahacks-frontend/src/views/resultsPage/ResultsPage.js"],"names":["React","useState","useEffect","db","ref","onValue","ResultsPage","data","setData","console","log","snapshot","dbData","val","brightness","humidity","temperature"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,qBAAf;AACA,SAASC,GAAT,EAAcC,OAAd,QAA6B,mBAA7B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAL,IAAAA,OAAO,CAACD,GAAG,CAACD,EAAD,EAAK,MAAL,CAAJ,EAAmBQ,QAAD,IAAc;AACrC,YAAMC,MAAM,GAAGD,QAAQ,CAACE,GAAT,EAAf;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,MAAxB;;AACA,UAAIA,MAAM,KAAK,IAAf,EAAqB;AACnBJ,QAAAA,OAAO,CAAC,EAAE,GAAGI;AAAL,SAAD,CAAP;AACD;AACF,KANM,CAAP;AAOD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAA,mCAAgBL,IAAI,CAACO,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,eAMI;AAAA,iCAAgBP,IAAI,CAACQ,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOE;AAAA;AAAA;AAAA;AAAA,YAPF,eAQI;AAAA,iCAAgBR,IAAI,CAACS,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA1BD;;GAAMV,W;;KAAAA,W;AA4BN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport db from '../../util/firebase'\nimport { ref, onValue } from 'firebase/database'\n\nconst ResultsPage = () => {\n  const [data, setData] = useState('');\n  useEffect(() => {\n    // read the database data from the specified database reference (\"test\")\n    console.log(\"HELLO\");\n    onValue(ref(db, 'test'), (snapshot) => {\n      const dbData = snapshot.val();\n      console.log(\"DBDATA: \", dbData);\n      if (dbData !== null) {\n        setData({ ...dbData });\n      } \n    })\n  }, [])\n\n  return (\n    <div className='confirm-container'>\n      <h1>Currently...</h1>\n      <div className=\"info\">\n        <p>Brightness: {data.brightness}</p>\n      </div>\n      <br />\n        <p>Brightness: {data.humidity}</p>\n      <br />\n        <p>Brightness: {data.temperature}</p>\n    </div>\n  )\n}\n\nexport default ResultsPage;\n"]},"metadata":{},"sourceType":"module"}