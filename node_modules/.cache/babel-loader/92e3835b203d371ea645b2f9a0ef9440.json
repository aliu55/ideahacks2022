{"ast":null,"code":"var _jsxFileName = \"/Users/asl/PROJECTS/ideahacks/src/views/selectionPage/SelectionPage.js\";\nimport React from 'react';\nimport RadioGroup from '../../components/RadioGroup';\nimport './SelectionPage.css';\n/* 2. Use the `useRadioGroup` hook to control a group of custom radios. */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectionPage = props => {\n  const timeOptions = ['morning', 'noon', 'afternoon', 'evening', 'midnight'];\n  const weatherOptions = ['snowy', 'rainy', 'cool', 'sunny', 'hot'];\n\n  function handleChange(e) {\n    // console.log(props);\n    console.log(props); // props.setSelection(e)\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selection-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selection-time\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"when would you like to take a walk?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        options: timeOptions,\n        handleChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selection-weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"what type of weather would you like to walk in?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        options: weatherOptions,\n        handleChange: e => console.log(\"weather\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selection-button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SelectionPage;\nexport default SelectionPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectionPage\");","map":{"version":3,"sources":["/Users/asl/PROJECTS/ideahacks/src/views/selectionPage/SelectionPage.js"],"names":["React","RadioGroup","SelectionPage","props","timeOptions","weatherOptions","handleChange","e","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAO,qBAAP;AAEA;;;;AACA,MAAMC,aAAa,GAAKC,KAAF,IAAa;AACjC,QAAMC,WAAW,GAAG,CAAC,SAAD,EAAY,MAAZ,EAAoB,WAApB,EAAiC,SAAjC,EAA4C,UAA5C,CAApB;AACA,QAAMC,cAAc,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB,EAA2B,OAA3B,EAAoC,KAApC,CAAvB;;AAEA,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAFuB,CAGvB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAEC,WAArB;AAAkC,QAAA,YAAY,EAAEE;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAED,cAArB;AAAqC,QAAA,YAAY,EAAGE,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAY,SAAZ;AAA1D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eASE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA3BD;;KAAMP,a;AA6BN,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport RadioGroup from '../../components/RadioGroup';\nimport './SelectionPage.css';\n\n/* 2. Use the `useRadioGroup` hook to control a group of custom radios. */\nconst SelectionPage = ( props ) => {\n  const timeOptions = ['morning', 'noon', 'afternoon', 'evening', 'midnight'];\n  const weatherOptions = ['snowy', 'rainy', 'cool', 'sunny', 'hot'];\n\n  function handleChange(e) {\n    // console.log(props);\n    console.log(props);\n    // props.setSelection(e)\n  }\n\n  return (\n    <div className=\"selection-container\">\n      <div className=\"selection-time\">\n        <h1>when would you like to take a walk?</h1>\n        <RadioGroup options={timeOptions} handleChange={handleChange}/>\n      </div>\n      <div className=\"selection-weather\">\n        <h1>what type of weather would you like to walk in?</h1>\n        <RadioGroup options={weatherOptions} handleChange={(e) => console.log(\"weather\")}/>\n      </div>\n      <div className=\"selection-button\">\n        {/* <Link to=\"/confirmation\">\n            <button className={Object.values(userSelection).every(category => (category !== '')) ? \"plan-btn enabled\" : \"plan-btn disabled\"} type=\"button\" onClick={Object.values(userSelection).every(category => (category !== '')) ? handleClick : null}>Plan My Day</button>\n        </Link> */}\n      </div>\n    </div>\n  )\n}\n\nexport default SelectionPage;\n\n"]},"metadata":{},"sourceType":"module"}